#!/usr/bin/env python3

import fargv
import json
from PIL import Image
import numpy as np
import frat


p={
    "jsons":set([]),
    "output_postfix":".segm.png",
    "multiclass":True,
    "rgb_output":True,
    "color_palette": False
}

if __name__ == "__main__":
    p, _ = fargv.fargv(p)
    assert not p.multiclass or not p.color_palette #  p.multiclass and p.color_palette are incompatible
    assert (not p.color_palette) or p.color_palette and rgb_output  # color_palette => rgb_output
    #output_size, multiclass=True, rgb_output=True, color_palete
    for json_name in p.jsons:
        assert json_name.lower().endswith(".json")
        gt = json.load(open(json_name,"r"))
        img = Image.open(json_name[:-5])
        rectangles, classids, class_colors = gt["rect_LTRB"], gt["rect_classes"], gt["class_colors"]
        if not p.color_palette:
            class_colors = []
        assert len(gt["class_names"])
        img = frat.rectangles_to_img(rectangles, classids, img.size, p.multiclass, p.rgb_output, class_colors)
        print(img.shape, img.dtype)
        img = Image.fromarray(img).save(json_name[:-5]+p.output_postfix)
